const mongoose = require("mongoose");

const jobSchema = new mongoose.Schema({
    jobId: {
        type: String,
        unique: true,
    },
    companyId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "CompanySchema",
        required: true,
    },
    jobRoleName: {
        type: String,
        required: true,
    },
    jobLocation: {
        type: String,
    },
    jobPreference: {
        type: String,
        enum: ["male", "female", "both"],
    },
    jobType: {
        type: String,
        enum: ["full time", "part time", "contractual", "freelance", "internship"],
    },
    jobShift: {
        type: String,
        enum: ["day shift", "night shift", "flexible shift", "any shift"],
    },
    qualification: {
        type: String,
    },
    yearOfPassing: {
        type: String,
    },
    aggregate: {
        type: String,
        enum: ["any", "50%-60%", "60%-70%", "above 70%"],
    },
    skills: {
        type: [String],
        enum: [
            "HTML",
            "CSS",
            "JavaScript",
            "TypeScript",
            "React.js",
            "Redux",
            "Next.js",
            "Node.js",
            "Express.js",
            "MongoDB",
            "Mongoose",
            "REST API",
            "GraphQL",
            "WebSockets",
            "Socket.IO",
            "JWT",
            "OAuth",
            "Bcrypt",
            "Passport.js",
            "Git",
            "GitHub",
            "GitLab",
            "Docker",
            "CI/CD",
            "Linux",
            "Nginx",
            "PM2",
            "AWS",
            "Firebase",
            "Vercel",
            "Netlify",
            "Postman",
            "Axios",
            "Tailwind CSS",
            "Bootstrap",
            "Material UI",
            "Webpack",
            "Babel",
            "Vite",
            "Responsive Design",
            "PWA",
            "SSR",
            "SEO Basics",
            "Testing (Jest, Mocha, Chai)",
            "ESLint",
            "Prettier",
            "Agile",
            "Scrum",
            "Jira",
            "Figma",
            "UI/UX Basics",
            "MySQL",
            "PostgreSQL",
            "Redis",
            "RabbitMQ",
            "Kafka",
            "Cloudinary",
            "Multer",
            "Stripe",
            "Razorpay",
            "Agile Development",
            "API Rate Limiting",
            "Load Balancing",
            "Data Structures",
            "Algorithms",
            "MVC",
            "MVVM",
            "Clean Code",
            "Design Patterns",
            "Error Handling",
            "Caching",
            "Throttling",
            "Pagination",
            "Infinite Scroll",
            "Code Splitting",
            "Lazy Loading",
            "Environment Variables",
            ".env Config",
            "Web Security",
            "CORS",
            "CSRF",
            "XSS",
            "SSRF",
            "HTTPS",
            "SSL",
            "Domain & DNS",
            "Webhooks",
            "Email Services (Nodemailer, Mailgun)",
            "CRON Jobs",
            "File Uploads",
            "Authentication Flows",
            "Role-Based Access Control",
            "Admin Dashboards",
            "Logging",
            "Analytics Integration (GA, Mixpanel)",
            "Performance Optimization",
            "Lighthouse Audit",
        ],
    },
    salary: {
        type: String,
    },
    noOfPositions: {
        type: Number,
    },
    bond: {
        type: Boolean,
        default: false,
    },
    bondDuration: {
        type: String,
        required: function() {
            return this.bond === true;
        },
    },
    jobDescription: {
        type: String,
    },
    interviewMode: {
        type: String,
        enum: ["on-site", "virtual"],
    },
    jobMode: {
        type: String,
        enum: ["WFH", "On site", "Hybrid"],
    },
    createdAt: {
        type: Date,
        default: Date.now,
    },
});

module.exports = mongoose.model("JobSchema", jobSchema);